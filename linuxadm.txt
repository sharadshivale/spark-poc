pwd --- shows current working dir
echo--- prints output what we type
for eg :- c=100 
	  echo $c (dollar is used to print variable)
ls -l --- shows the content with its owner sett,permission,timestamp(in thia type of commands "l" is called as flag)
ls -a --- shows hidden content
ls -S --- sort file in descending order 
ls -author --- shows the content with its owner
cd /home/ubuntu ---the '/' before home denotes root directory (home dir is inside root dir)
cd 'x y'---used when there is space between the file or dir name
cat file1.txt>>file2.txt --- used to append contents from file 1 to file 2(cat stands for concatenate)
cat > file3.txt --- it creates a new file with given name and the contril prompt is taken to next line for user to enter the content inside the file and save\
 content by using ctrl+d
cat -s --- used to squeeze multiple blank lines inside a file
cat -n --- used to number every line inside the file
cat -b --- used to number every line except for blankline inside the file
in vi editor we save content using :wq    and insert content using i
cat -E --- shows $ after every line to identify endofline
grep option file1.text --- returns result for matching string "options" in case sensitive format in a text file
grep -i option file1.text --- returns result for matching string "options" in case insensitive format
grep -n option file1.text --- returns the string along with the line number
grep -v option file1.text --- returns result of lines which does not containn the string
grep -c option file1.text --- resturns only the number of how many  times the string occured
sort file1.txt --- sorts the file content in alphabetical order (sort can be used with files,directories,file content)
sort file1.txt file2.txt --- sorts both files and shows the result alltogether(blank space comes before any alphabets)
sort -r file1.txt ---  returns the reverse of what sort returns
sort -n file1.txt --- returns in numerical order (if lines with no number are present then they are shown first followed by numerical lines)
sort -f file1.txt --- does case insensitive sorting 
grep am file1.txt file2.txt | sort --- searches for am in both files and the output is send as input to the sort command so we can execute 2 commandds in one line
ps ux --- shows processes started by user
pidof firefox --- shows pid


#!bin/sh ---- use mahit nay fakt nano file madhe hota start la jya files execute karta yetat tya 